{
  "scopeName": "source.mermaid",
  "patterns": [
    {
      "include": "#comment"
    },
    {
      "include": "#classDiagram"
    },
    {
      "include": "#sequenceDiagram"
    },
    {
      "include": "#flowChart"
    },
    {
      "include": "#ganttChart"
    },
    {
      "include": "#pieChart"
    },
    {
      "include": "#stateDiagram"
    },
    {
      "include": "#entityRelationshipDiagram"
    },
    {
      "include": "#journeyDiagram"
    },
    {
      "include": "#string"
    },
    {
      "include": "#number"
    },
    {
      "include": "#operator"
    },
    {
      "include": "#variable"
    }
  ],
  "repository": {
    "comment": {
      "patterns": [
        {
          "name": "comment.line.double-slash.mermaid",
          "begin": "//",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.comment.mermaid"
            }
          },
          "end": "$",
          "name": "comment.line.double-slash.mermaid"
        }
      ]
    },
    "classDiagram": {
      "patterns": [
        {
          "name": "keyword.control.classDiagram.mermaid",
          "match": "\\b(classDiagram|class|<|--|\\+|\\-|\\#|\\*)\\b"
        },
        {
          "name": "entity.name.class.mermaid",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.attribute.mermaid",
          "match": "(\\+|\\-|\\#|\\*)\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "storage.type.attribute.mermaid",
          "match": "\\b(string|int|void|String)\\b"
        },
        {
          "name": "variable.other.attribute.name.mermaid",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "variable.other.attribute.full.mermaid",
          "match": "(\\+string |\\+int |\\+void |\\+String )"
        }
      ]
    },
    "sequenceDiagram": {
      "patterns": [
        {
          "name": "keyword.control.sequenceDiagram.mermaid",
          "match": "\\b(sequenceDiagram|participant|actor|autonumber|title|section|alt|else|loop|par|rect|opt|note|end|activate|deactivate|destroy)\\b"
        },
        {
          "name": "entity.name.participant.mermaid",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "keyword.operator.sequenceDiagram.mermaid",
          "match": "(->>|-->>|--x|-x|->|-->)"
        },
        {
          "name": "string.quoted.double.mermaid",
          "begin": ":",
          "beginCaptures": {
            "0": {
              "name": "punctuation.separator.sequenceDiagram.mermaid"
            }
          },
          "end": "$",
          "patterns": [
            {
              "name": "string.quoted.double.mermaid",
              "begin": "\"",
              "beginCaptures": {
                "0": {
                  "name": "punctuation.definition.string.begin.mermaid"
                }
              },
              "end": "\"",
              "endCaptures": {
                "0": {
                  "name": "punctuation.definition.string.end.mermaid"
                }
              },
              "patterns": [
                {
                  "name": "constant.character.escape.mermaid",
                  "match": "\\\\."
                }
              ]
            },
            {
              "name": "string.unquoted.mermaid",
              "match": ".+"
            }
          ]
        }
      ]
    },
    "flowChart": {
      "patterns": [
        {
          "name": "keyword.control.flowChart.mermaid",
          "match": "\\b(graph|TD|LR|TB|RL|BT|subgraph|end|style|linkStyle|classDef|class|click|hover|interpolate)\\b"
        },
        {
          "name": "entity.name.flowChart.node.mermaid",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        },
        {
          "name": "keyword.operator.flowChart.mermaid",
          "match": "(-->|-.->|-.->|==>|==)"
        },
        {
          "name": "string.quoted.double.flowChart.mermaid",
          "begin": "\\[",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.flowChart.mermaid"
            }
          },
          "end": "\\]",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.flowChart.mermaid"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.flowChart.mermaid",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.flowChart.condition.mermaid",
          "begin": "\\{",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.flowChart.mermaid"
            }
          },
          "end": "\\}",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.flowChart.mermaid"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.flowChart.mermaid",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.double.flowChart.label.mermaid",
          "begin": "\\|",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.flowChart.mermaid"
            }
          },
          "end": "\\|",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.flowChart.mermaid"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.flowChart.mermaid",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "ganttChart": {
      "patterns": [
        {
          "name": "keyword.control.ganttChart.mermaid",
          "match": "\\b(gantt|title|dateFormat|section|todayMarker|excludes|axisFormat)\\b"
        }
      ]
    },
    "pieChart": {
      "patterns": [
        {
          "name": "keyword.control.pieChart.mermaid",
          "match": "\\b(pie|title|showData|data)\\b"
        }
      ]
    },
    "stateDiagram": {
      "patterns": [
        {
          "name": "keyword.control.stateDiagram.mermaid",
          "match": "\\b(stateDiagram|state|[*]|note|as|hide|show|fork|join|end|choice|opt|alt|loop|par|rect|direction)\\b"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "-->"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "-x-"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "--x-"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "<--"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "<->"
        },
        {
          "name": "keyword.operator.stateDiagram.arrow.mermaid",
          "match": "<-->"
        }
      ]
    },
    "entityRelationshipDiagram": {
      "patterns": [
        {
          "name": "keyword.control.entityRelationshipDiagram.mermaid",
          "match": "\\b(erDiagram|entity|relationship)\\b"
        }
      ]
    },
    "journeyDiagram": {
      "patterns": [
        {
          "name": "keyword.control.journeyDiagram.mermaid",
          "match": "\\b(journey|title|section)\\b"
        }
      ]
    },
    "string": {
      "patterns": [
        {
          "name": "string.quoted.double.mermaid",
          "begin": "\"",
          "beginCaptures": {
            "0": {
              "name": "punctuation.definition.string.begin.mermaid"
            }
          },
          "end": "\"",
          "endCaptures": {
            "0": {
              "name": "punctuation.definition.string.end.mermaid"
            }
          },
          "patterns": [
            {
              "name": "constant.character.escape.mermaid",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "number": {
      "patterns": [
        {
          "name": "constant.numeric.mermaid",
          "match": "\\b\\d+(\\.\\d+)?\\b"
        }
      ]
    },
    "operator": {
      "patterns": [
        {
          "name": "keyword.operator.mermaid",
          "match": "[-=<>+*/]"
        }
      ]
    },
    "variable": {
      "patterns": [
        {
          "name": "variable.other.mermaid",
          "match": "\\b[a-zA-Z_][a-zA-Z0-9_]*\\b"
        }
      ]
    }
  }
}